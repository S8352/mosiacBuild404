version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ../../backend-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://jobcopilot:password@postgres:5432/job_copilot
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_ORIGINS=chrome-extension://*,http://localhost:3000,http://localhost:8080
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - jobcopilot-network

  # Frontend Extension (Development Server)
  extension-dev:
    build:
      context: ../../extension
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - API_BASE_URL=http://localhost:3000
      - DEBUG=true
      - ENVIRONMENT=development
    depends_on:
      - backend
    networks:
      - jobcopilot-network

  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=job_copilot
      - POSTGRES_USER=jobcopilot
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../backend-service/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jobcopilot-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jobcopilot-network

volumes:
  postgres_data:
  redis_data:

networks:
  jobcopilot-network:
    driver: bridge
